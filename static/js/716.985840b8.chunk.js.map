{"version":3,"file":"static/js/716.985840b8.chunk.js","mappings":"iJA8BA,QA3BA,SAAoBA,GAAc,IAAb,OAAEC,GAAQD,EAC3B,OACIE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKH,EAAOI,KAAI,CAACC,EAAOC,KAChBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOL,SAAA,EAClBF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,wBAAuBL,UAClCF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CACDC,GAAE,UAAAC,OAAYN,EAAMO,GAAGC,SACvBC,MAAO,CAAEC,gBAAgB,OAADJ,OAASN,EAAMW,QAAQC,WAAWC,KAAKC,IAAG,WAG1EZ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYL,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,QAAOL,UAClBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,UAAAC,OAAYN,EAAMO,GAAGC,SAAUV,SAAEE,EAAMW,QAAQI,WAE3DnB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAML,UACjBF,EAAAA,EAAAA,KAAA,QAAMO,UAAU,SAAQL,UACpBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,YAAAC,OAAcN,EAAMW,QAAQK,WAAYlB,SAAEE,EAAMW,QAAQM,wBAbpDhB,MAqB5C,C,uHCqDA,QAtEA,SAAiBiB,GACb,MAAM,UAAEF,IAAcG,EAAAA,EAAAA,MACdC,EAAeC,IAAqBC,EAAAA,EAAAA,aACpCC,EAAcC,IAAoBF,EAAAA,EAAAA,UAAS,KAC3CG,EAASC,IAAeJ,EAAAA,EAAAA,WAAS,IACjCK,EAAeC,IAAqBN,EAAAA,EAAAA,UAAS,OAErDO,EAAAA,EAAAA,YAAU,KACeC,WACjB,IACI,MAAMC,QAAaC,EAAAA,EAAAA,GAAa,4BAAD1B,OAA6BU,IAC5DK,EAAiBU,EAAKE,MAAM,IAE5B,MAAMC,QAAmBF,EAAAA,EAAAA,GAAa,oBAAD1B,OAAqBU,EAAS,kCACnEQ,EAA0B,OAAVU,QAAU,IAAVA,OAAU,EAAVA,EAAYD,OAC5BL,EAA2B,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYP,cACjC,CAAE,MAAOQ,GACLC,QAAQD,MAAM,uBAAwBA,EAC1C,CAAC,QACGT,GAAW,EACf,GAEJW,EAAc,GACf,CAACrB,IAEJ,MAQMsB,EAAmBb,EAAU,YAAc,WAEjD,OACI7B,EAAAA,EAAAA,KAAC2C,EAAAA,EAAI,CACDxB,MAAQ,kCACRyB,YAAY,uEAAe1C,UAE3BF,EAAAA,EAAAA,KAAA,WAASW,GAAG,UAAUJ,UAAWmC,EAAiBxC,SAC7CsB,IACGlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeL,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iBAAiBM,MAAO,CAAEC,gBAAgB,OAADJ,OAASc,EAAcqB,iBAAiBC,MAAMC,kBAAiB,MAAM7C,UACzHF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,SAAQL,UACnBF,EAAAA,EAAAA,KAAA,OAAKgD,IAAKxB,EAAcT,QAAQC,WAAWC,KAAKC,IAAK+B,IAAKzB,EAAcT,QAAQI,aAGxFb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcL,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAIO,UAAU,QAAOL,SAAEsB,EAAcT,QAAQI,SAC7CnB,EAAAA,EAAAA,KAAA,KAAGO,UAAU,OAAML,SAAEsB,EAAcT,QAAQ6B,eAC3CtC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAML,SAAA,EACjBI,EAAAA,EAAAA,MAAA,QAAAJ,SAAA,EAAMF,EAAAA,EAAAA,KAACkD,EAAAA,IAAa,IAAI1B,EAAc2B,WAAWC,oBACjD9C,EAAAA,EAAAA,MAAA,QAAAJ,SAAA,EAAMF,EAAAA,EAAAA,KAACqD,EAAAA,IAAO,IAAI7B,EAAc2B,WAAWG,eAC3ChD,EAAAA,EAAAA,MAAA,QAAAJ,SAAA,EAAMF,EAAAA,EAAAA,KAACuD,EAAAA,IAAM,IAAI/B,EAAc2B,WAAWK,oBAGlDxD,EAAAA,EAAAA,KAAA,OAAKO,UAAU,mCAAkCL,UAC7CF,EAAAA,EAAAA,KAACyD,EAAAA,EAAW,CAAC1D,OAAQ4B,OAEzB3B,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcL,SACxB6B,IAAiB/B,EAAAA,EAAAA,KAAA,UAAQ0D,QApC3BxB,UACnB,GAAIH,EAAe,CACf,MAAMO,QAAmBF,EAAAA,EAAAA,GAAa,oBAAD1B,OAAqBU,EAAS,4CAAAV,OAA2CqB,IAC9GH,GAAgB+B,GAAc,IAAIA,KAAerB,EAAWD,SAC5DL,EAA2B,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYP,cACjC,GA+BsE7B,SAAC,gCAO/E,C,gDC7EO,MAED0D,EAAU,CACZC,OAAQ,CACJC,WAAY,IAEhBC,QAAS,CACL,iBAAkBC,qDAClB,kBAAmB,+BAId5B,EAAeF,UACxB,MAAM,KAAEC,SAAe8B,EAAAA,EAAMC,IAAI,GAADxD,OAbZ,qCAawB,KAAAA,OAAIQ,GAAO0C,GAEvD,OADApB,QAAQ2B,IAAIhC,GACLA,CAAI,C","sources":["components/videos/VideoSearch.jsx","pages/Channel.jsx","utils/api.js"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction VideoSearch({ videos }) {\r\n    return (\r\n        <>\r\n            {videos.map((video, index) => (\r\n                <div className=\"video\" key={index}>\r\n                    <div className=\"video_thumb play_icon\">\r\n                        <Link \r\n                            to={`/video/${video.id.videoId}`} \r\n                            style={{ backgroundImage: `url(${video.snippet.thumbnails.high.url})` }}>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"video_info\">\r\n                        <div className=\"title\">\r\n                            <Link to={`/video/${video.id.videoId}`}>{video.snippet.title}</Link>\r\n                        </div>\r\n                        <div className=\"info\">\r\n                            <span className=\"author\">\r\n                                <Link to={`/channel/${video.snippet.channelId}`}>{video.snippet.channelTitle}</Link>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VideoSearch;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchFromAPI } from '../utils/api'\r\n\r\nimport Main from '../components/layout/Main';\r\nimport VideoSearch from '../components/videos/VideoSearch';\r\n\r\nimport { CiBadgeDollar } from \"react-icons/ci\";\r\nimport { CiMedal } from \"react-icons/ci\";\r\nimport { CiRead } from \"react-icons/ci\";\r\n\r\nfunction Channel(props) {\r\n    const { channelId } = useParams();\r\n    const [ channelDetail, setChannelDetail ] = useState();\r\n    const [ channelVideo, setChannelVideo ] = useState([]);\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ nextPageToken, setNextPageToken ] = useState(null); \r\n\r\n    useEffect(() => {\r\n        const fetchResults = async () => {\r\n            try {\r\n                const data = await fetchFromAPI(`channels?part=snippet&id=${channelId}`);\r\n                setChannelDetail(data.items[0]);\r\n\r\n                const videosData = await fetchFromAPI(`search?channelId=${channelId}&part=snippet%2Cid&order=date`);\r\n                setChannelVideo(videosData?.items);\r\n                setNextPageToken(videosData?.nextPageToken);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchResults();\r\n    }, [channelId]);\r\n\r\n    const loadMoreVideos = async () => {\r\n        if (nextPageToken) {\r\n            const videosData = await fetchFromAPI(`search?channelId=${channelId}&part=snippet%2Cid&order=date&pageToken=${nextPageToken}`);\r\n            setChannelVideo(prevVideos => [...prevVideos, ...videosData.items]);\r\n            setNextPageToken(videosData?.nextPageToken);\r\n        }\r\n    };\r\n\r\n    const channelPageClass = loading ? 'isLoading' : 'isLoaded';\r\n\r\n    return (\r\n        <Main \r\n            title = \"유튜브 채널\"\r\n            description=\"유튜브 채널페이지입니다.\">\r\n            \r\n            <section id='channel' className={channelPageClass}>\r\n                {channelDetail && (\r\n                    <div className='channel_inner'>\r\n                        <div className='channel_header' style={{ backgroundImage: `url(${channelDetail.brandingSettings.image.bannerExternalUrl})` }}>\r\n                            <div className='circle'>\r\n                                <img src={channelDetail.snippet.thumbnails.high.url} alt={channelDetail.snippet.title} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='channel_info'>\r\n                            <h3 className='title'>{channelDetail.snippet.title}</h3>\r\n                            <p className='desc'>{channelDetail.snippet.description}</p>\r\n                            <div className='info'>\r\n                                <span><CiBadgeDollar />{channelDetail.statistics.subscriberCount}</span>\r\n                                <span><CiMedal />{channelDetail.statistics.videoCount}</span>\r\n                                <span><CiRead />{channelDetail.statistics.viewCount}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='channel_video video_inner search'>\r\n                            <VideoSearch videos={channelVideo} />\r\n                        </div>\r\n                        <div className='channel_more'>\r\n                            {nextPageToken && <button onClick={loadMoreVideos}>더 보기</button>}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </section>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default Channel","import axios from 'axios';\r\n\r\nexport const BASE_URL = 'https://youtube-v31.p.rapidapi.com';\r\n\r\nconst options = {\r\n    params: {\r\n        maxResults: 12,\r\n    },\r\n    headers: {\r\n        'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\r\n        'X-RapidAPI-Host': 'youtube-v31.p.rapidapi.com'\r\n    }\r\n};\r\n\r\nexport const fetchFromAPI = async (url) => {\r\n    const { data } = await axios.get(`${BASE_URL}/${url}`, options);\r\n    console.log(data)\r\n    return data;\r\n};"],"names":["_ref","videos","_jsx","_Fragment","children","map","video","index","_jsxs","className","Link","to","concat","id","videoId","style","backgroundImage","snippet","thumbnails","high","url","title","channelId","channelTitle","props","useParams","channelDetail","setChannelDetail","useState","channelVideo","setChannelVideo","loading","setLoading","nextPageToken","setNextPageToken","useEffect","async","data","fetchFromAPI","items","videosData","error","console","fetchResults","channelPageClass","Main","description","brandingSettings","image","bannerExternalUrl","src","alt","CiBadgeDollar","statistics","subscriberCount","CiMedal","videoCount","CiRead","viewCount","VideoSearch","onClick","prevVideos","options","params","maxResults","headers","process","axios","get","log"],"sourceRoot":""}